/*
### **Business Case: Enhancing Operational Efficiency for Operational Staff in a Banking Environment**

---

### **Executive Summary**
Operational inefficiency among the bank's staff presents an urgent challenge that impacts overall productivity and profitability. This business case proposes a solution for operations management to gain better control over staff productivity while simultaneously creating a structured pathway for upskilling. While the system prioritizes meeting the organization's efficiency goals, its introduction will place additional demands on operational staff, requiring heightened accountability, continuous learning, and increased workloads. This document outlines the challenges, justifies the urgency of the solution, and provides an implementation plan that highlights both its advantages for management and its implications for the workforce.

---

### **Problem Statement**
Despite advancements in banking technology, operational inefficiencies remain persistent due to the following issues:

1. **Low Productivity Visibility**:
   - Managers struggle to accurately assess the productivity of operational staff, leading to uneven distribution of workload and inefficiencies.
   - Without objective productivity data, identifying underperforming employees is challenging.

2. **Skill Gaps in Staff**:
   - Staff lack formalized opportunities to acquire new skills, resulting in stagnant professional growth.
   - Training programs are disconnected from operational workflows, limiting their impact.

3. **Inefficient Task Allocation**:
   - Tasks are assigned manually without considering individual capabilities or workload, leading to suboptimal performance.
   - Operational bottlenecks occur when critical tasks are left to less-prepared employees.

4. **Management Oversight Limitations**:
   - Managers rely on outdated tools for monitoring team output, making data-driven decisions difficult.
   - Without centralized performance metrics, management cannot take proactive steps to improve team efficiency.

5. **Resistance to Change**:
   - Staff perceive additional systems and expectations as burdensome, heightening resistance and potential pushback.

---

### **Why It Needs to Be Tackled**
1. **Urgency for Organizational Productivity**:
   - Current inefficiencies directly impact customer service turnaround times and operational costs, leaving the bank vulnerable in a competitive market.

2. **Mandatory Compliance and Up-To-Date Knowledge**:
   - In an industry subject to constant regulatory changes, ensuring all employees are adequately trained is critical to mitigating risks.

3. **Cost Management**:
   - Increased efficiency from better task allocation and accountability can reduce overtime expenses and prevent resource wastage.

4. **Future-Proofing**:
   - A workforce equipped with up-to-date skills is better prepared to adapt to industry changes and take on evolving responsibilities.

While this system supports organizational goals, it also introduces a significant cultural shift for operational staff. Increased accountability, mandatory upskilling, and structured task assignment may initially feel restrictive or overwhelming.

---

### **Proposed Solution**
To address these inefficiencies, the following system will be implemented:

1. **Website-Based Learning Modules**:
   - Staff are required to complete online training modules focused on specific aspects of banking operations and compliance.
   - Completion of a module results in earning a **digital badge** that verifies expertise in the subject.

2. **Badge-Based Skill Recognition**:
   - A database tracks earned badges, linking them to specific skills.
   - Staff are **automatically assigned tasks** relevant to the badges they hold, ensuring responsibilities align with their qualifications.

3. **Productivity Monitoring**:
   - An integrated tracking system measures staff output, allowing operations management to gain visibility into performance.
   - Metrics such as task completion rates, error rates, and training progress are fed into a centralized dashboard.

4. **Management Dashboard**:
   - A real-time platform provides comprehensive insights into team productivity and task distribution.
   - Managers can identify high performers and underperformers, enabling targeted interventions.

5. **Incentives and Recognition**:
   - While the system introduces more demands, it also creates pathways for career advancement through badge accumulation and performance recognition.

---

### **Impact Assessment**
#### Advantages for Management:
- **Enhanced Control**: Operations management gains full visibility into staff productivity and training progress, enabling data-driven decisions.
- **Increased Efficiency**: Automation of task assignments reduces delays and ensures the right tasks are completed by the right people.
- **Improved Accountability**: The system creates a clear record of individual contributions, reducing ambiguities in performance evaluation.

#### Implications for Staff:
- **Increased Workload**: Staff will face additional expectations, including mandatory training and higher scrutiny of performance.
- **Pressure to Upskill**: Continuous learning becomes a requirement rather than an option, adding pressure for employees to keep up.
- **Resistance to Automation**: Some staff may feel that the system reduces their autonomy in task selection and prioritization.

---

### **Initial Stakeholder Assessment Matrix**

| **Stakeholder**             | **Role/Responsibility**                       | **Interest**                            | **Influence**       | **Concerns**                           |
|-----------------------------|-----------------------------------------------|-----------------------------------------|---------------------|----------------------------------------|
| Operations Management       | Oversee productivity and task allocation      | High: Data-driven decision-making       | High                | Smooth implementation of the system    |
| IT Department               | Develop and maintain the system               | Medium: System integration              | High                | Compatibility and minimal downtime     |
| Ops Maker (End Users)    | Use the system for training and task management | Low: Career development and workload balance | Medium              | Increased workload and loss of autonomy |
| HR/Training Team            | Design learning modules and administer badges | High: Standardized training across roles | Medium              | Relevance of training content          |
| Senior Leadership           | Sponsor the solution and approve funding      | High: Long-term productivity improvements | High                | ROI and overall organizational impact  |
| Supervisor
---

### **Initial Requirements**
#### Functional Requirements:
1. **Learning Modules**:
   - Include both mandatory and optional training programs.
   - Automatically track progress and issue badges upon completion.

2. **Badge System**:
   - Link badges to specific skills and operational tasks.
   - Automate the assignment of tasks based on earned badges.

3. **Performance Tracking**:
   - Capture metrics such as task completion rates, training completion, and error frequency.
   - Display metrics on a real-time dashboard.

4. **Management Tools**:
   - Provide centralized dashboards with drill-down capabilities for individual and team performance insights.
   - Enable managers to override automated task assignments if necessary.

#### Non-Functional Requirements:
1. **Scalability**:
   - Support current staff while allowing for future growth.
2. **Security**:
   - Ensure strict data protection compliance, including access controls for sensitive information.
3. **Usability**:
   - Prioritize user-friendly interfaces to encourage adoption.

---
### **Constraints and Assumptions**


#### **Constraints**
1. **Employee Resistance**:
   - Operational staff are likely to perceive the system as overly demanding due to increased workload, mandatory training requirements, and reduced task autonomy.
   - The bank will need to address change management carefully to mitigate pushback and foster adoption.

2. **Time Constraints for Implementation**:
   - Development, testing, and rollout of the system must align with business cycles and avoid peak operational periods, potentially delaying deployment.

3. **Budgetary Limits**:
   - The solution must operate within the approved budget, which may restrict the extent of system customization, training modules, and IT resources available for development and maintenance.

4. **System Integration Challenges**:
   - The system must integrate seamlessly with existing tools (e.g., customer relationship management systems and HR platforms), which may require additional resources or third-party vendor support.

5. **Data Privacy and Security Compliance**:
   - The system must adhere to stringent data protection laws, such as the Hong Kong Personal Data (Privacy) Ordinance, ensuring secure storage and access of employee and operational data.

6. **Training Module Relevance**:
   - Developing learning modules that are directly relevant to staff responsibilities is critical. Generic or redundant content risks disengaging employees and reducing adoption rates.

---

#### **Assumptions**
1. **Management Support**:
   - Senior leadership and operations management are assumed to fully back the implementation and provide the necessary resources, including financial, technological, and human support.

2. **IT Infrastructure Capability**:
   - The bank’s existing IT infrastructure is assumed to be robust enough to support the new system’s requirements without requiring significant hardware upgrades.

3. **Employee Participation**:
   - It is assumed that operational staff will comply with mandatory participation in learning modules and task assignments, despite potential resistance.

4. **Task Alignment with Skills**:
   - The badge system is assumed to accurately match staff skills with relevant tasks, minimizing mismatches or unnecessary reassignments.

5. **Ongoing System Improvements**:
   - It is assumed that the system will evolve over time based on user feedback, enabling better alignment with both management and employee needs.

6. **Minimal Downtime During Rollout**:
   - The implementation process is assumed to have minimal disruptions to daily operations, relying on phased rollouts and comprehensive testing beforehand.

---

This additional section underscores the practical limitations and assumptions that come with implementing the proposed system. Constraints highlight the challenges, while assumptions set expectations for the project's success.

Would you like me to expand on this further or address any additional aspects?
—-

### **Conclusion**
While the proposed system is primarily designed to benefit operations management by enhancing control and efficiency, its implementation will create significant changes for the workforce. The additional accountability, mandatory upskilling, and structured workflows may initially face resistance from staff, but these changes are vital for long-term organizational growth and competitiveness. It is crucial to accompany this implementation with clear communication, transparency, and a roadmap for addressing employee concerns to ensure its success.

How does this version align with your expectations? Let me know if further adjustments are needed.
*/



from faker import Faker
import pandas as pd
import random
import numpy as np

def generate_data(records_per_country):
    fake = Faker()
    Faker.seed(0)  # For reproducibility
    np.random.seed(0)  # For reproducibility

    # Note1 combinations
    task_combinations = [
        ("CA", "AAAA"), ("CA", "LMU-SP Release"), ("CA", "LMU-Legal Bills"), 
        ("CA", "LMU-CRIS"), ("CA", "LMU-Provision"), ("CA", "Settlement"),
        ("CE", "Additional Information Required"), ("CH", "BIB Maintenance Online request"),
        ("CM", "Change of address"), ("CM", "Change of Company Name"),
        # Add the rest of the combinations from Note1...
    ]
    country_codes = ["hk", "sg", "my", "uk"]

    # Table 1: CL365_UserAvailability
    user_availability = []
    for _ in range(records_per_country * len(country_codes)):
        first_name = fake.first_name().lower()
        last_name = fake.last_name().lower()
        domain = random.choice(country_codes)
        login_email = f"{first_name}.{last_name}@hsbc.com.{domain}"
        user_availability.append({
            "Login Email": login_email,
            "Available": True  # Temporarily set to True; will be updated later
        })

    user_availability_df = pd.DataFrame(user_availability)

    # Table 2: CL365_UserAvailabilityLogs
    actions = ["Log in", "Error", "Continued Case Assignment", "Log Out", 
               "Points Earned", "Stopped Case Assignment", "Task Assigned", 
               "Task Cancelled", "Task Completed", "Task Opened", "Task Returned to RM"]
    user_availability_logs = []
    
    for email in user_availability_df["Login Email"]:
        action = random.choice(actions)  # Assign a single action to the user
        task_id = None
        if action in ["Error", "Continued Case Assignment", "Points Earned", 
                      "Task Assigned", "Task Cancelled", "Task Completed", 
                      "Task Opened", "Task Returned to RM"]:
            task_id = f"TASK-{random.randint(10000, 999999)}"  # Assign task ID if applicable
        user_availability_logs.append({
            "Login Email": email,
            "Action": action,
            "TaskID": task_id
        })

    user_availability_logs_df = pd.DataFrame(user_availability_logs)

    # Update Table 1: Set Available to False if no TaskID exists in Table 2 for the same email
    def check_availability(email):
        log_entries = user_availability_logs_df[user_availability_logs_df["Login Email"] == email]
        has_task_id = log_entries["TaskID"].notna().any()
        return has_task_id  # True if TaskID exists, else False

    user_availability_df["Available"] = user_availability_df["Login Email"].apply(check_availability)

    # Table 3: CL365_UserSkillset
    user_skillset = []
    for email in user_availability_df["Login Email"]:
        for _ in range(random.randint(1, len(task_combinations))):
            task_type, sub_task = random.choice(task_combinations)
            country_code = email.split('.')[-1]
            mean_completion = int(np.random.normal(1300, 200))  # Mean ~1300, StdDev ~200
            mean_completion = max(0, min(mean_completion, 2000))
            error_rate = round(np.random.normal(0.3, 0.1), 2)  # Mean ~0.3, StdDev ~0.1
            error_rate = max(0.0, min(error_rate, 1.0))
            user_skillset.append({
                "Login Email": email,
                "TaskType": task_type,
                "Sub Task": sub_task,
                "Country Code": country_code,
                "Mean Completion": mean_completion,
                "Error Rate": error_rate
            })

    user_skillset_df = pd.DataFrame(user_skillset)

    # Table 4: CL365_TaskStatistics
    task_statistics = []
    for task_type, sub_task in task_combinations:
        for country_code in country_codes:
            task_statistics.append({
                "TaskType": task_type,
                "Sub Task": sub_task,
                "Country Code": country_code,
                "Mean Completion": None,  # Placeholder for aggregation
                "Error Rate": None       # Placeholder for aggregation
            })

    task_statistics_df = pd.DataFrame(task_statistics)

    return user_availability_df, user_availability_logs_df, user_skillset_df, task_statistics_df


# Usage Example
records_per_country = 10
table_1, table_2, table_3, table_4 = generate_data(records_per_country)

print("Table 1: User Availability")
print(table_1.head(20))
print("\nTable 2: User Availability Logs")
print(table_2.head(20))
print("\nTable 3: User Skillset")
print(table_3.head(20))
print("\nTable 4: Task Statistics")
print(table_4.head(20))
